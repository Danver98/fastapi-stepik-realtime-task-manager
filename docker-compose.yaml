services:
  db:
    image: postgres:latest
    expose:
      - 5432
    env_file:
      - /.docker.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  redis:
    restart: unless-stopped
    image: redis:alpine
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
    env_file:
      - /.docker.env
    restart: on-failure
    environment:
      - TASK_MANAGER_APP_STAGE=docker
    command: sh -c "alembic upgrade head && uvicorn main:app --reload --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: .
          target: /app

volumes:
  postgres_data:
  redis_data: